name: Collect logs using juju-k8s-crashdump
description: Use-juju-k8s-crashdump to collect logs

inputs:
  kubeconf:
    description: "Path to a kubeconf"
    required: true
  controller:
    description: "Name of a controller to collect logs for"
    required: true
  output_path:
    description: "Path to write the crashdump to, will write it as a .tar.gz file"
    required: false
    default: "juju-logs.tar.gz"
  proxy:
    description: "url for the a proxy to connect to pip with"
    required: false
    default: ""

outputs:
  crashdump_path:
    description: "Path to the output crashdump"
    value: ${{ steps.collect_logs.outputs.crashdump_path }}

runs:
  using: "composite"
  steps:
  - name: Clone repo
    uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
    with:
      repository: canonical/juju-k8s-crashdump
      path: ./juju-k8s-crashdump
      ref: ${{ env.ACTION_REF }}
    env:
      ACTION_REF: ${{ github.action_ref }}

  - name: Install pipx
    shell: bash
    working-directory: ./juju-k8s-crashdump
    run: |
      sudo apt-get update --quiet
      sudo apt-get install pipx --quiet --assume-yes

  - name: Setup pip proxy
    if: ${{inputs.proxy}} != ""
    shell: bash
    working-directory: ./juju-k8s-crashdump
    env:
      proxy: ${{inputs.proxy}}
    run: |
      sudo tee /etc/pip.conf <<EOF
      [global]
      proxy=${proxy}
      EOF

  - name: Install
    shell: bash
    working-directory: ./juju-k8s-crashdump
    run: |
      sudo snap install kubectl --classic
      pipx install poetry==1.6
      pipx install .

  - name: Collect Logs
    id: collect_logs
    shell: bash
    working-directory: ./juju-k8s-crashdump
    env:
      kubeconf: ${{ inputs.kubeconf }}
      controller: ${{ inputs.controller }}
      output_path: ${{ inputs.output_path }}
    run: |
      juju-k8s-crashdump "${kubeconf}" "${controller}" --output "${output_path}"
      echo "crashdump_path=$(realpath ${output_path})" >> $GITHUB_OUTPUT

